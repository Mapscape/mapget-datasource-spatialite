{
  // optional. Datasource info from mapget lib. Will be retrieved from the db if not present, layer_name=table_name, primary key as id
  "datasourceInfo": { 
    "mapId": "<any_id_you_like>",
    "layers": {
      // one table per layer (at least for now)
      "<name_of_the_layer>": { 
        "featureTypes": [
          {
            "name": "<table_name_lowercase>",
            "uniqueIdCompositions": [
              [
                {
                  "partId": "id",
                  "description": "primary key",
                  "datatype": "I32"
                }
              ]
            ]
          }
        ]
      }
    }
  },
  // optional. If the layer is not present here, the datasource will retrieve the info from the db
  "attributesInfo": { 
    // must be the same as in datasourceInfo. If not datasourceInfo is provided, must be a table name in lowercase
    "<layer_name1>": { 
      "attributes": {
        // must be the same as column name in the layer table if no relation is provided
        "<attribute_name1>": { 
          // optional. Will be retrieved from the db if not present
          "type": "<attribute_type(integer,float,text,blob)>", 
          // relation description. Can be useful for enum values, when there is only a number in the feature table, 
          // when the name of the enum is in another table (or another column)
          "relation": { 
            // column(s) with the related info. If multiple columns are provided, they will be concatenated in a single text attribute
            "relatedColumns": [
              "<table_name1>.<column_name1>", 
              "<table_name2>.<column_name2>"
            ], 
            // optional, "|" by default. Delimiter for concatenated related columns if there are more than 1
            "delimiter": "|", 
            // SQL condition to match the related columns. 'layerTable' must be used to refer to the table with the feature
            // example: myTable.category = 'Road' AND myTable.value = layerTable.value
            "matchCondition": "<condition>" 
          }
        },
        "<attribute_name2>": {}
      },
      // optional, true by default. Only attributes from this config will be shown if false
      "getRemainingAttributesFromDb": true 
    }
  },
  // scale geometries coordinates
  "coordinatesScaling": {
    // global config, will be applied to every geometry in the map
    "global": {
      // different combinations of projections can be provided
      "xy": 0.00001,
      "z": 0.1
    },
    // per-layer config, overrides global config
    "layers": {
      "<layer_name>": {
        "xyz": 10
      }
    }
  }
}